 public static async Task< IEnumerable<product_serch_View>> serch_product2(string tx_serch, string price)
        {
            db=new DataClasses1DataContext();

            string s = string.Format(@"
SELECT     TOP (5000) id, name, fullname, {2}, code, Balance, store_name, store_id
FROM       product_serch_View
WHERE    ((Balance > 0) AND (is_stop = 0) and store_id IN ({1})) and ((name LIKE N'%{0}%') or (code LIKE N'%{0}%') )
ORDER BY (CASE WHEN name LIKE N'{0}%' THEN 1 ELSE NULL END) DESC,name
", tx_serch, string.Join(",", list_ids_store), price);
            var xx =await Task.Run(async () => db.ExecuteQuery<product_serch_View>(s));
            return xx;

        }

        public static  List<product_serch_View> serch_product2<T>(string tx_serch, string price, string store_id)
        {
            //try
            //{


                string dr = store_id == "" ? string.Join(",", list_ids_store) : store_id;
                // string s = string.Format(@"
                // SELECT     TOP (50) id, name, fullname, {2} as price_sale, code, Balance, store_name, store_id
                // FROM       product_serch_View
                // WHERE    ((Balance > 0) AND (is_stop = 0) and store_id IN ({1})) and ((name LIKE N'%{0}%') or (code LIKE N'%{0}%') )
                // ORDER BY (CASE WHEN name LIKE N'{0}%' THEN 1 ELSE NULL END) DESC,name
                // ", tx_serch.Replace_text(), dr, price);
                ////await Task.Run(() => Thread.Sleep(5000));
                // var xx = await Task.Run(() => db.ExecuteQuery<product_serch_View>(s));
                var xx = db.serch_product(tx_serch.Replace_text(), price, dr);
                return xx.ToList();
            //}
            //catch 
            //{
            //    return new List<product_serch_View>();
            //}
        }

        //public DataClasses1DataContext() :
        //        base(global::tnerhbeauty.Properties.Settings.Default.DBBETTERLIFE_MDF.show_Decrypt(), mappingSource)
        //{
        //    OnCreated();
        //}
         public static async Task<List<product_serch_View>> serch_product2(string tx_serch, string price, string store_id)
        {
            try
            {
                string dr = store_id == "" ? string.Join(",", list_ids_store) : store_id;
                string s = string.Format(@"
                SELECT     TOP (50) id, name, fullname, {2} as price_sale, code, Balance, store_name, store_id
                FROM       product_serch_View
                WHERE    ((Balance > 0) AND (is_stop = 0) and store_id IN ({1})) and ((name LIKE N'%{0}%') or (code LIKE N'%{0}%') )
                ORDER BY (CASE WHEN name LIKE N'{0}%' THEN 1 ELSE NULL END) DESC,name
                ", tx_serch.Replace_text(), dr, price);
               //await Task.Run(() => Thread.Sleep(5000));
                var xx = await Task.Run(() => db.ExecuteQuery<product_serch_View>(s));
                return xx.ToList();
            }
            catch 
            {
                return new List<product_serch_View>();
            }
        }



